{"ast":null,"code":"/*! @name @videojs/vhs-utils @version 2.3.0 @license MIT */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar toUint8 = function toUint8(bytes) {\n  return bytes instanceof Uint8Array ? bytes : new Uint8Array(bytes && bytes.buffer || bytes, bytes && bytes.byteOffset || 0, bytes && bytes.byteLength || 0);\n};\n\nvar bytesToString = function bytesToString(bytes) {\n  if (!bytes) {\n    return '';\n  }\n\n  bytes = Array.prototype.slice.call(bytes);\n  var string = String.fromCharCode.apply(null, toUint8(bytes));\n\n  try {\n    return decodeURIComponent(escape(string));\n  } catch (e) {// if decodeURIComponent/escape fails, we are dealing with partial\n    // or full non string data. Just return the potentially garbled string.\n  }\n\n  return string;\n};\n\nvar id3Size = function id3Size(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n  var returnSize = bytes[offset + 6] << 21 | bytes[offset + 7] << 14 | bytes[offset + 8] << 7 | bytes[offset + 9];\n  var flags = bytes[offset + 5];\n  var footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n\n  return returnSize + 10;\n};\n\nvar getId3Offset = function getId3Offset(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n\n  if (bytes.length - offset < 10 || bytesToString(bytes.subarray(offset, offset + 3)) !== 'ID3') {\n    return offset;\n  }\n\n  offset += id3Size(bytes, offset); // recursive check for id3 tags as some files\n  // have multiple ID3 tag sections even though\n  // they should not.\n\n  return getId3Offset(bytes, offset);\n};\n\nvar isLikely = {\n  aac: function aac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytes.length >= offset + 2 && (bytes[offset] & 0xFF) === 0xFF && (bytes[offset + 1] & 0xE0) === 0xE0 && (bytes[offset + 1] & 0x16) === 0x10;\n  },\n  mp3: function mp3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytes.length >= offset + 2 && (bytes[offset] & 0xFF) === 0xFF && (bytes[offset + 1] & 0xE0) === 0xE0 && (bytes[offset + 1] & 0x06) === 0x02;\n  },\n  webm: function webm(bytes) {\n    return bytes.length >= 4 && (bytes[0] & 0xFF) === 0x1A && (bytes[1] & 0xFF) === 0x45 && (bytes[2] & 0xFF) === 0xDF && (bytes[3] & 0xFF) === 0xA3;\n  },\n  mp4: function mp4(bytes) {\n    return bytes.length >= 8 && /^(f|s)typ$/.test(bytesToString(bytes.subarray(4, 8))) && // not 3gp data\n    !/^ftyp3g$/.test(bytesToString(bytes.subarray(4, 10)));\n  },\n  '3gp': function gp(bytes) {\n    return bytes.length >= 10 && /^ftyp3g$/.test(bytesToString(bytes.subarray(4, 10)));\n  },\n  ts: function ts(bytes) {\n    if (bytes.length < 189 && bytes.length >= 1) {\n      return bytes[0] === 0x47;\n    }\n\n    var i = 0; // check the first 376 bytes for two matching sync bytes\n\n    while (i + 188 < bytes.length && i < 188) {\n      if (bytes[i] === 0x47 && bytes[i + 188] === 0x47) {\n        return true;\n      }\n\n      i += 1;\n    }\n\n    return false;\n  },\n  flac: function flac(bytes) {\n    return bytes.length >= 4 && /^fLaC$/.test(bytesToString(bytes.subarray(0, 4)));\n  },\n  ogg: function ogg(bytes) {\n    return bytes.length >= 4 && /^OggS$/.test(bytesToString(bytes.subarray(0, 4)));\n  }\n}; // get all the isLikely functions\n// but make sure 'ts' is at the bottom\n// as it is the least specific\n\nvar isLikelyTypes = Object.keys(isLikely) // remove ts\n.filter(function (t) {\n  return t !== 'ts';\n}) // add it back to the bottom\n.concat('ts'); // make sure we are dealing with uint8 data.\n\nisLikelyTypes.forEach(function (type) {\n  var isLikelyFn = isLikely[type];\n\n  isLikely[type] = function (bytes) {\n    return isLikelyFn(toUint8(bytes));\n  };\n}); // A useful list of file signatures can be found here\n// https://en.wikipedia.org/wiki/List_of_file_signatures\n\nvar detectContainerForBytes = function detectContainerForBytes(bytes) {\n  bytes = toUint8(bytes);\n\n  for (var i = 0; i < isLikelyTypes.length; i++) {\n    var type = isLikelyTypes[i];\n\n    if (isLikely[type](bytes)) {\n      return type;\n    }\n  }\n\n  return '';\n}; // fmp4 is not a container\n\n\nvar isLikelyFmp4MediaSegment = function isLikelyFmp4MediaSegment(bytes) {\n  bytes = toUint8(bytes);\n  var i = 0;\n\n  while (i < bytes.length) {\n    var size = (bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]) >>> 0;\n    var type = bytesToString(bytes.subarray(i + 4, i + 8));\n\n    if (type === 'moof') {\n      return true;\n    }\n\n    if (size === 0 || size + i > bytes.length) {\n      i = bytes.length;\n    } else {\n      i += size;\n    }\n  }\n\n  return false;\n};\n\nexports.detectContainerForBytes = detectContainerForBytes;\nexports.getId3Offset = getId3Offset;\nexports.id3Size = id3Size;\nexports.isLikely = isLikely;\nexports.isLikelyFmp4MediaSegment = isLikelyFmp4MediaSegment;","map":{"version":3,"sources":["/home/ubuntu/Documents/video-player-examples/node_modules/@videojs/vhs-utils/dist/containers.js"],"names":["Object","defineProperty","exports","value","toUint8","bytes","Uint8Array","buffer","byteOffset","byteLength","bytesToString","Array","prototype","slice","call","string","String","fromCharCode","apply","decodeURIComponent","escape","e","id3Size","offset","returnSize","flags","footerPresent","getId3Offset","length","subarray","isLikely","aac","mp3","webm","mp4","test","gp","ts","i","flac","ogg","isLikelyTypes","keys","filter","t","concat","forEach","type","isLikelyFn","detectContainerForBytes","isLikelyFmp4MediaSegment","size"],"mappings":"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","sourcesContent":["/*! @name @videojs/vhs-utils @version 2.3.0 @license MIT */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar toUint8 = function toUint8(bytes) {\n  return bytes instanceof Uint8Array ? bytes : new Uint8Array(bytes && bytes.buffer || bytes, bytes && bytes.byteOffset || 0, bytes && bytes.byteLength || 0);\n};\nvar bytesToString = function bytesToString(bytes) {\n  if (!bytes) {\n    return '';\n  }\n\n  bytes = Array.prototype.slice.call(bytes);\n  var string = String.fromCharCode.apply(null, toUint8(bytes));\n\n  try {\n    return decodeURIComponent(escape(string));\n  } catch (e) {// if decodeURIComponent/escape fails, we are dealing with partial\n    // or full non string data. Just return the potentially garbled string.\n  }\n\n  return string;\n};\n\nvar id3Size = function id3Size(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n  var returnSize = bytes[offset + 6] << 21 | bytes[offset + 7] << 14 | bytes[offset + 8] << 7 | bytes[offset + 9];\n  var flags = bytes[offset + 5];\n  var footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n\n  return returnSize + 10;\n};\nvar getId3Offset = function getId3Offset(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n\n  if (bytes.length - offset < 10 || bytesToString(bytes.subarray(offset, offset + 3)) !== 'ID3') {\n    return offset;\n  }\n\n  offset += id3Size(bytes, offset); // recursive check for id3 tags as some files\n  // have multiple ID3 tag sections even though\n  // they should not.\n\n  return getId3Offset(bytes, offset);\n};\nvar isLikely = {\n  aac: function aac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytes.length >= offset + 2 && (bytes[offset] & 0xFF) === 0xFF && (bytes[offset + 1] & 0xE0) === 0xE0 && (bytes[offset + 1] & 0x16) === 0x10;\n  },\n  mp3: function mp3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytes.length >= offset + 2 && (bytes[offset] & 0xFF) === 0xFF && (bytes[offset + 1] & 0xE0) === 0xE0 && (bytes[offset + 1] & 0x06) === 0x02;\n  },\n  webm: function webm(bytes) {\n    return bytes.length >= 4 && (bytes[0] & 0xFF) === 0x1A && (bytes[1] & 0xFF) === 0x45 && (bytes[2] & 0xFF) === 0xDF && (bytes[3] & 0xFF) === 0xA3;\n  },\n  mp4: function mp4(bytes) {\n    return bytes.length >= 8 && /^(f|s)typ$/.test(bytesToString(bytes.subarray(4, 8))) && // not 3gp data\n    !/^ftyp3g$/.test(bytesToString(bytes.subarray(4, 10)));\n  },\n  '3gp': function gp(bytes) {\n    return bytes.length >= 10 && /^ftyp3g$/.test(bytesToString(bytes.subarray(4, 10)));\n  },\n  ts: function ts(bytes) {\n    if (bytes.length < 189 && bytes.length >= 1) {\n      return bytes[0] === 0x47;\n    }\n\n    var i = 0; // check the first 376 bytes for two matching sync bytes\n\n    while (i + 188 < bytes.length && i < 188) {\n      if (bytes[i] === 0x47 && bytes[i + 188] === 0x47) {\n        return true;\n      }\n\n      i += 1;\n    }\n\n    return false;\n  },\n  flac: function flac(bytes) {\n    return bytes.length >= 4 && /^fLaC$/.test(bytesToString(bytes.subarray(0, 4)));\n  },\n  ogg: function ogg(bytes) {\n    return bytes.length >= 4 && /^OggS$/.test(bytesToString(bytes.subarray(0, 4)));\n  }\n}; // get all the isLikely functions\n// but make sure 'ts' is at the bottom\n// as it is the least specific\n\nvar isLikelyTypes = Object.keys(isLikely) // remove ts\n.filter(function (t) {\n  return t !== 'ts';\n}) // add it back to the bottom\n.concat('ts'); // make sure we are dealing with uint8 data.\n\nisLikelyTypes.forEach(function (type) {\n  var isLikelyFn = isLikely[type];\n\n  isLikely[type] = function (bytes) {\n    return isLikelyFn(toUint8(bytes));\n  };\n}); // A useful list of file signatures can be found here\n// https://en.wikipedia.org/wiki/List_of_file_signatures\n\nvar detectContainerForBytes = function detectContainerForBytes(bytes) {\n  bytes = toUint8(bytes);\n\n  for (var i = 0; i < isLikelyTypes.length; i++) {\n    var type = isLikelyTypes[i];\n\n    if (isLikely[type](bytes)) {\n      return type;\n    }\n  }\n\n  return '';\n}; // fmp4 is not a container\n\nvar isLikelyFmp4MediaSegment = function isLikelyFmp4MediaSegment(bytes) {\n  bytes = toUint8(bytes);\n  var i = 0;\n\n  while (i < bytes.length) {\n    var size = (bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]) >>> 0;\n    var type = bytesToString(bytes.subarray(i + 4, i + 8));\n\n    if (type === 'moof') {\n      return true;\n    }\n\n    if (size === 0 || size + i > bytes.length) {\n      i = bytes.length;\n    } else {\n      i += size;\n    }\n  }\n\n  return false;\n};\n\nexports.detectContainerForBytes = detectContainerForBytes;\nexports.getId3Offset = getId3Offset;\nexports.id3Size = id3Size;\nexports.isLikely = isLikely;\nexports.isLikelyFmp4MediaSegment = isLikelyFmp4MediaSegment;\n"]},"metadata":{},"sourceType":"script"}