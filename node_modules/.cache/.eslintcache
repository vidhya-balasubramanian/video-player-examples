[{"/home/ubuntu/Documents/video-player-examples/src/index.js":"1","/home/ubuntu/Documents/video-player-examples/src/Router.js":"2","/home/ubuntu/Documents/video-player-examples/src/reportWebVitals.js":"3","/home/ubuntu/Documents/video-player-examples/src/pages/Home.js":"4","/home/ubuntu/Documents/video-player-examples/src/pages/VideoPlayer.js":"5","/home/ubuntu/Documents/video-player-examples/src/pages/ShakaPlayer.js":"6"},{"size":450,"mtime":1612969433722,"results":"7","hashOfConfig":"8"},{"size":584,"mtime":1612969433722,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1612969433722,"results":"10","hashOfConfig":"8"},{"size":395,"mtime":1612969433722,"results":"11","hashOfConfig":"8"},{"size":912,"mtime":1612969433722,"results":"12","hashOfConfig":"8"},{"size":353,"mtime":1612969433722,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"jgt61w",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/home/ubuntu/Documents/video-player-examples/src/index.js",[],["29","30"],"/home/ubuntu/Documents/video-player-examples/src/Router.js",[],"/home/ubuntu/Documents/video-player-examples/src/reportWebVitals.js",[],"/home/ubuntu/Documents/video-player-examples/src/pages/Home.js",[],"/home/ubuntu/Documents/video-player-examples/src/pages/VideoPlayer.js",["31","32"],"import React, { useLayoutEffect, useRef, useState } from 'react'\nimport videojs from 'video.js'\n\nimport 'video.js/dist/video-js.css';\n\nexport default () => {\n\n  const [key, setkey] = useState(0)\n  let videoNode = useRef(null)\n  let player = undefined;\n\n  const options = {\n    autoplay: false,\n    playbackRates: [0.5, 1, 1.25, 1.5, 2],\n    width: 720,\n    height: 300,\n    controls: true,\n    sources: [\n      {\n        src: 'https://www.learningcontainer.com/wp-content/uploads/2020/05/sample-mp4-file.mp4',\n        type: 'video/mp4',\n      },\n    ],\n  };\n\n  useLayoutEffect(() => {\n    player = videojs(videoNode.current, options).ready()\n    return () => {\n      if(player) {\n        player.dispose()\n        setkey(key + 1)\n      }\n    }\n  }, [options.sources.src])\n\n  \n  return (\n    <div data-vjs-player key={`video-${key}`}>\n      <video ref={videoNode} className=\"video-js\"></video>\n    </div>\n  )\n  \n}\n","/home/ubuntu/Documents/video-player-examples/src/pages/ShakaPlayer.js",["33"],"import React from 'react'\nimport ShakaPlayer from 'shaka-player-react';\nimport 'shaka-player/dist/controls.css';\n\nconst options = {\n  autoplay: false,\n  width: 720,\n  height: 300,\n  src: 'https://www.learningcontainer.com/wp-content/uploads/2020/05/sample-mp4-file.mp4',\n};\n\nexport default () => {  \n  return (\n    <ShakaPlayer {...options} />\n  )\n  \n}\n",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":6,"column":1,"nodeType":"40","endLine":43,"endColumn":2},{"ruleId":"41","severity":1,"message":"42","line":27,"column":14,"nodeType":"43","endLine":27,"endColumn":57},{"ruleId":"38","severity":1,"message":"39","line":12,"column":1,"nodeType":"40","endLine":17,"endColumn":2},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","Assignments to the 'player' variable from inside React Hook useLayoutEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useLayoutEffect.","CallExpression","no-global-assign","no-unsafe-negation"]