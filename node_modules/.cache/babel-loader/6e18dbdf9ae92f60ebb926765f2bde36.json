{"ast":null,"code":"var toUnsigned = require('../utils/bin').toUnsigned;\n\nvar tfdt = function (data) {\n  var result = {\n    version: data[0],\n    flags: new Uint8Array(data.subarray(1, 4)),\n    baseMediaDecodeTime: toUnsigned(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7])\n  };\n\n  if (result.version === 1) {\n    result.baseMediaDecodeTime *= Math.pow(2, 32);\n    result.baseMediaDecodeTime += toUnsigned(data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11]);\n  }\n\n  return result;\n};\n\nmodule.exports = tfdt;","map":{"version":3,"sources":["/home/ubuntu/Documents/video-player-examples/node_modules/mux.js/lib/tools/parse-tfdt.js"],"names":["toUnsigned","require","tfdt","data","result","version","flags","Uint8Array","subarray","baseMediaDecodeTime","Math","pow","module","exports"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBD,UAAzC;;AAEA,IAAIE,IAAI,GAAG,UAASC,IAAT,EAAe;AACxB,MAAIC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAEF,IAAI,CAAC,CAAD,CADF;AAEXG,IAAAA,KAAK,EAAE,IAAIC,UAAJ,CAAeJ,IAAI,CAACK,QAAL,CAAc,CAAd,EAAiB,CAAjB,CAAf,CAFI;AAGXC,IAAAA,mBAAmB,EAAET,UAAU,CAACG,IAAI,CAAC,CAAD,CAAJ,IAAW,EAAX,GAAgBA,IAAI,CAAC,CAAD,CAAJ,IAAW,EAA3B,GAAgCA,IAAI,CAAC,CAAD,CAAJ,IAAW,CAA3C,GAA+CA,IAAI,CAAC,CAAD,CAApD;AAHpB,GAAb;;AAKA,MAAIC,MAAM,CAACC,OAAP,KAAmB,CAAvB,EAA0B;AACxBD,IAAAA,MAAM,CAACK,mBAAP,IAA8BC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,CAA9B;AACAP,IAAAA,MAAM,CAACK,mBAAP,IAA8BT,UAAU,CAACG,IAAI,CAAC,CAAD,CAAJ,IAAW,EAAX,GAAgBA,IAAI,CAAC,CAAD,CAAJ,IAAW,EAA3B,GAAgCA,IAAI,CAAC,EAAD,CAAJ,IAAY,CAA5C,GAAgDA,IAAI,CAAC,EAAD,CAArD,CAAxC;AACD;;AACD,SAAOC,MAAP;AACD,CAXD;;AAaAQ,MAAM,CAACC,OAAP,GAAiBX,IAAjB","sourcesContent":["var toUnsigned = require('../utils/bin').toUnsigned;\n\nvar tfdt = function(data) {\n  var result = {\n    version: data[0],\n    flags: new Uint8Array(data.subarray(1, 4)),\n    baseMediaDecodeTime: toUnsigned(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7])\n  };\n  if (result.version === 1) {\n    result.baseMediaDecodeTime *= Math.pow(2, 32);\n    result.baseMediaDecodeTime += toUnsigned(data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11]);\n  }\n  return result;\n};\n\nmodule.exports = tfdt;\n\n"]},"metadata":{},"sourceType":"script"}